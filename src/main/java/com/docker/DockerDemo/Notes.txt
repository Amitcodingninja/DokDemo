Here is the list of extracted commands:

1. `wsl --install`
2. `wsl --install -d Ubuntu`
3. `sudo apt update`
4. `sudo apt install docker.io -y`
5. `sudo systemctl start docker`
6. `sudo systemctl enable docker`
7. `wsl -l -v`
8. `wsl -d Ubuntu`
9. `docker --version`
10. `sudo docker run hello-world`
11. `docker run -it ubuntu bash`
12. `apt list --upgradable`
13. `cd /mnt/c/Users/ACER/Downloads/DockerDemo/DockerDemo`

These are the key commands from your provided text.
 Let me know if you need further clarification or usage
  instructions for any specific command.

Here is the list of commands from your provided text:

1. `docker images`
2. `sudo docker images`
3. `ls`
4. `docker build -t springapi .`
5. `sudo docker build -t springapi .`
6. `sudo docker images`
7. `sudo docker run -p 8000:8080 springapi`

These commands cover checking images, building Docker images,
listing files, and running a Spring Boot application inside
Docker. Let me know if you'd like further explanations!



for Running in AWS CLI 


1 intellij to Github 
2. EC2 launch in gitbash and install docker there by 
sudo yum update -y 
sudo yum install docker -y
sudo service docker start
sudo usermod -aG docker ec2-user
exit

3. Install git 
sudo yum install git -y 
git version 
where is git 

4. Install Maven 
 sudo yum install maven -y
 
 5 . git clone 
 
 git clone https://github.com/Amitcodingninja/DokDemo.git
 ls
 
6 . cd DokDemo and ls -l 
mvn clean package
  cd ..
 come in root folder ([ec2-user@ip-172-31-12-72 DokDemo]$
)


7. create account on dockerhub 
docker build -t amitit073/test:testing-v1 .
➡️ Correct from dockerfile 3/3
check image by : docker images

8. run the docker 
docker run  -d -p 8080:8000 amitit073/test:testing-v1

docker ps : it will show container is running 

9. Go to security groups and edit enbound group 

10 . replace your localhost by ip (EC2)

11. docker login and push in docker hub 

docker push amitit073/test:testing-v1

